{ config, options, pkgs, inputs, lib, ... }:

let cfg = config.modules.shell.zsh;
in {
  options.modules.shell.zsh = {
    enable = lib.mkEnableOption "zsh";
    rcFiles = lib.mkOption {
      type = (with lib.types; listOf (either str path));
      default = [];
    };
  };

  config = lib.mkIf cfg.enable {

    programs.zsh = {
      enable = true;
      enableCompletion = true;
      enableAutosuggestions = true;
      enableSyntaxHighlighting = true;
      autocd = true;
      # dotdir = "./config/zsh" # default one
      # ? this option is not found
      # historySubstringSearch = {
      #   enable = true;
      #   searchDownKey = "^N";
      #   searchUpKey = "^P";
      # };
    };

    home.packages = with pkgs; [
      bat # A cat(1) clone with syntax highlighting and Git integration
      exa # modern replacement for the command-line program ls

      fasd # Quick command-line access to files and directories for POSIX shells
      # zoxide # A fast cd command that learns your habits

      fd # A simple, fast and user-friendly alternative to find
      fzf
      # jq # command line JSON processor
      ripgrep
      tldr # Simplified and community-driven man pages
    ];

    home.sessionVariables = {
      ZDOTDIR   = "${config.xdg.configHome}/zsh";
      ZSH_CACHE = "${config.xdg.cacheHome}/zsh";
      ANTIDOTE_DIR  = "${config.xdg.dataHome}/antidote";
    };

    xdg.configFile = {
      "zsh" = { source = "${inputs.self}/config/zsh"; recursive = true; };
      # Why am I creating extra.zsh{rc,env} when I could be using initExtra?
      # Because initExtra generates those files in /etc/profile, and mine just
      # write the files to ~/.config/zsh; where it's easier to edit and tweak
      # them in case of issues or when experimenting.
      "zsh/extra.zshrc".text =
        ''
           # This file was autogenerated, do not edit it!
           ${lib.concatMapStrings (path: "source '${path}'\n") cfg.rcFiles}
        '';
    };

    # home.activation.cleanupZsh = ''
    #   rm -rf $ZSH_CACHE
    #   rm -fv $ZDOTDIR/plugins.zsh
    # '';
  };
}
